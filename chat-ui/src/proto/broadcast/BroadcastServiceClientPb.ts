/**
 * @fileoverview gRPC-Web generated client stub for broadcast
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.27.1
// source: proto/broadcast/broadcast.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_broadcast_broadcast_pb from '../../proto/broadcast/broadcast_pb'; // proto import: "proto/broadcast/broadcast.proto"
import * as proto_common_common_pb from '../../proto/common/common_pb'; // proto import: "proto/common/common.proto"
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"


export class BroadcastClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorheartbeat = new grpcWeb.MethodDescriptor(
    '/broadcast.Broadcast/heartbeat',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    proto_common_common_pb.MessageResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    proto_common_common_pb.MessageResponse.deserializeBinary
  );

  heartbeat(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<proto_common_common_pb.MessageResponse>;

  heartbeat(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_common_common_pb.MessageResponse) => void): grpcWeb.ClientReadableStream<proto_common_common_pb.MessageResponse>;

  heartbeat(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_common_common_pb.MessageResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/broadcast.Broadcast/heartbeat',
        request,
        metadata || {},
        this.methodDescriptorheartbeat,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/broadcast.Broadcast/heartbeat',
    request,
    metadata || {},
    this.methodDescriptorheartbeat);
  }

  methodDescriptorclientHeartbeat = new grpcWeb.MethodDescriptor(
    '/broadcast.Broadcast/clientHeartbeat',
    grpcWeb.MethodType.UNARY,
    proto_broadcast_broadcast_pb.UserSession,
    proto_common_common_pb.MessageResponse,
    (request: proto_broadcast_broadcast_pb.UserSession) => {
      return request.serializeBinary();
    },
    proto_common_common_pb.MessageResponse.deserializeBinary
  );

  clientHeartbeat(
    request: proto_broadcast_broadcast_pb.UserSession,
    metadata?: grpcWeb.Metadata | null): Promise<proto_common_common_pb.MessageResponse>;

  clientHeartbeat(
    request: proto_broadcast_broadcast_pb.UserSession,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_common_common_pb.MessageResponse) => void): grpcWeb.ClientReadableStream<proto_common_common_pb.MessageResponse>;

  clientHeartbeat(
    request: proto_broadcast_broadcast_pb.UserSession,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_common_common_pb.MessageResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/broadcast.Broadcast/clientHeartbeat',
        request,
        metadata || {},
        this.methodDescriptorclientHeartbeat,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/broadcast.Broadcast/clientHeartbeat',
    request,
    metadata || {},
    this.methodDescriptorclientHeartbeat);
  }

  methodDescriptorbroadcastUserPresenceEvent = new grpcWeb.MethodDescriptor(
    '/broadcast.Broadcast/broadcastUserPresenceEvent',
    grpcWeb.MethodType.UNARY,
    proto_broadcast_broadcast_pb.UserPresence,
    proto_common_common_pb.MessageResponse,
    (request: proto_broadcast_broadcast_pb.UserPresence) => {
      return request.serializeBinary();
    },
    proto_common_common_pb.MessageResponse.deserializeBinary
  );

  broadcastUserPresenceEvent(
    request: proto_broadcast_broadcast_pb.UserPresence,
    metadata?: grpcWeb.Metadata | null): Promise<proto_common_common_pb.MessageResponse>;

  broadcastUserPresenceEvent(
    request: proto_broadcast_broadcast_pb.UserPresence,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_common_common_pb.MessageResponse) => void): grpcWeb.ClientReadableStream<proto_common_common_pb.MessageResponse>;

  broadcastUserPresenceEvent(
    request: proto_broadcast_broadcast_pb.UserPresence,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_common_common_pb.MessageResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/broadcast.Broadcast/broadcastUserPresenceEvent',
        request,
        metadata || {},
        this.methodDescriptorbroadcastUserPresenceEvent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/broadcast.Broadcast/broadcastUserPresenceEvent',
    request,
    metadata || {},
    this.methodDescriptorbroadcastUserPresenceEvent);
  }

  methodDescriptorbroadcastMessageEvent = new grpcWeb.MethodDescriptor(
    '/broadcast.Broadcast/broadcastMessageEvent',
    grpcWeb.MethodType.UNARY,
    proto_common_common_pb.Message,
    proto_common_common_pb.MessageResponse,
    (request: proto_common_common_pb.Message) => {
      return request.serializeBinary();
    },
    proto_common_common_pb.MessageResponse.deserializeBinary
  );

  broadcastMessageEvent(
    request: proto_common_common_pb.Message,
    metadata?: grpcWeb.Metadata | null): Promise<proto_common_common_pb.MessageResponse>;

  broadcastMessageEvent(
    request: proto_common_common_pb.Message,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_common_common_pb.MessageResponse) => void): grpcWeb.ClientReadableStream<proto_common_common_pb.MessageResponse>;

  broadcastMessageEvent(
    request: proto_common_common_pb.Message,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_common_common_pb.MessageResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/broadcast.Broadcast/broadcastMessageEvent',
        request,
        metadata || {},
        this.methodDescriptorbroadcastMessageEvent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/broadcast.Broadcast/broadcastMessageEvent',
    request,
    metadata || {},
    this.methodDescriptorbroadcastMessageEvent);
  }

}

