syntax = "proto3";
package user;
option go_package = "protobuf/user";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "common/common.proto";

service User {
    rpc heartbeat(google.protobuf.Empty) returns (common.MessageResponse) {}
    rpc getBestServer(google.protobuf.Empty) returns (common.MessageResponse) {}
    rpc signup(NewUser) returns (UserMetadata) {}
    rpc updateUser(UserMetadata) returns (common.MessageResponse) {}
    rpc login(Login) returns (UserMetadata) {}
    rpc logout(google.protobuf.StringValue) returns (common.MessageResponse) {}
    rpc createContact(NewContact) returns (Contact) {}
    rpc getContacts(google.protobuf.StringValue) returns (Contacts) {}
    rpc createChannel(NewChannel) returns (Channel) {}
    rpc getUsersAssociatedToChannel(google.protobuf.StringValue) returns (Users) {}
    rpc getChannelsAssociatedToUser(google.protobuf.StringValue) returns (Channels) {}
}

message NewUser {
    string email = 1;
    string displayName = 2;
}

message Login {
    string email = 1;
}

message UserMetadata {
    string userId = 1;
    string email = 2;
    string displayName = 3;
    string createdAt = 4;
} 

message NewContact {
    string userId = 1;
    string friendEmail = 2;
    string displayName = 3;
}

message Contact {
    string userId = 1;
    string email = 2;
    string displayName = 3;
}

message Contacts {
    repeated Contact contacts = 1;
}

message NewChannel {
    string channelId = 1;
    repeated string userIds = 2;
    string channelName = 3;
}

message Users {
    repeated string userIds = 1;
}

message Channel {
    string channelId = 1;
    string channelName = 2;
}

message Channels {
    repeated Channel channels = 1;
}